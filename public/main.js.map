{"version":3,"sources":["./src/app/logo-scoreboard/score-card/score-card.component.ts","./src/app/logo-scoreboard/score-card/score-card.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/environments/environment.ts","./src/app/tournament-parent/event-card-by-round/event-card-by-round.component.ts","./src/app/tournament-parent/event-card-by-round/event-card-by-round.component.html","./src/app/rules/hosting/hosting.component.ts","./src/app/rules/hosting/hosting.component.html","./src/app/rules/tiebreakers/tiebreakers.component.ts","./src/app/rules/tiebreakers/tiebreakers.component.html","./src/app/event-admin-parent/event-admin-parent.component.ts","./src/app/event-admin-parent/event-admin-parent.component.html","./src/app/nav-bar/chart-modal/chart-modal.component.ts","./src/app/nav-bar/chart-modal/chart-modal.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/constants.ts","./src/app/tournament-parent/tournament-parent/tournament-parent.component.ts","./src/app/tournament-parent/tournament-parent/tournament-parent.component.html","./src/app/app.module.ts","./src/app/tournament-parent/event-card-by-round/event-result/event-result.component.ts","./src/app/tournament-parent/event-card-by-round/event-result/event-result.component.html","./src/app/tournament-parent/event-card-by-round/best-presentation-award/best-presentation-award.component.ts","./src/app/tournament-parent/event-card-by-round/best-presentation-award/best-presentation-award.component.html","./src/app/rules/scoring/scoring.component.ts","./src/app/rules/scoring/scoring.component.html","./src/app/nav-bar/rules-modal/rules-modal.component.ts","./src/app/nav-bar/rules-modal/rules-modal.component.html","./src/app/rules/wildcard/wildcard.component.ts","./src/app/rules/wildcard/wildcard.component.html","./src/app/logo-scoreboard/logo-scoreboard.component.ts","./src/app/logo-scoreboard/logo-scoreboard.component.html","./src/app/app-routing.module.ts","./src/app/models/contestant.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { Contestant } from 'src/app/models/contestant';\r\n\r\n@Component({\r\n  selector: 'app-score-card',\r\n  templateUrl: './score-card.component.html',\r\n  styleUrls: ['./score-card.component.scss']\r\n})\r\nexport class ScoreCardComponent implements OnInit {\r\n  @Input() contestant = new Contestant;\r\n  @Input() place!: string;\r\n  @Input() isAllContestantsTied!: boolean;\r\n  @Input() isFinalRound: boolean = false;\r\n  positionImageUrl!: string;\r\n\r\n  constructor(private afStorage: AngularFireStorage) { }\r\n\r\n  ngOnInit(): void {\r\n    this.showImage();\r\n  }\r\n\r\n  getEjc(): string {\r\n    return this.contestant.ejc ? 'Juice!' : ''\r\n  }\r\n\r\n  showImage(): void {\r\n    let storageRef = this.afStorage.storage.ref();\r\n    storageRef.child(`positions/${this.place}.png`).getDownloadURL().then((url) => {\r\n      this.positionImageUrl = url;\r\n      console.log('***********', this.positionImageUrl)\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"score-card-container\">\r\n    <div mat-card-avatar [ngClass]=\"contestant.avatar!\"></div>\r\n    <div class=\"score-card-text-ml2\">\r\n        <div class=\"tims-idea\">\r\n            <span class=\"card-title\">{{ contestant.name! }}</span>\r\n            <div *ngIf=\"!isAllContestantsTied\">\r\n                <img [src]=\"positionImageUrl\" class=\"score-card-position\">\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <span>{{ contestant.points }}pts</span>\r\n\r\n            <span *ngIf=\"!isFinalRound\" class=\"font-red\"> &nbsp; {{ getEjc() }}</span>\r\n            <span *ngIf=\"isFinalRound\">\r\n                <span *ngIf=\"'1st' === place\">\r\n                    <img src=\"../../../assets/trophy1use.svg\" class=\"final-results-icon \">\r\n                </span>\r\n                <span *ngIf=\"'2nd' === place\">\r\n                    <img src=\"../../../assets/silver-medal -use.svg\" class=\"final-results-icon \">\r\n                </span>\r\n                <span *ngIf=\"'3rd' === place\">\r\n                    <img src=\"../../../assets/bronze-medal - use.svg\" class=\"final-results-icon \">\r\n                </span>\r\n                <span *ngIf=\"'4th' === place\">\r\n                    <img src=\"../../../assets/last-place.svg\" class=\"final-results-icon \">\r\n                </span>\r\n                <span *ngIf=\"contestant.isBestPresentation\">\r\n                    <img src=\"../../../assets/ribbon.png\" class=\"final-results-icon \">\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ChartModalComponent } from './chart-modal/chart-modal.component';\r\nimport { RulesModalComponent } from './rules-modal/rules-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openRulesDialog() {\r\n    const dialogRef = this.dialog.open(RulesModalComponent);\r\n  }\r\n\r\n  openChartDialog() {\r\n    const dialogRef = this.dialog.open(ChartModalComponent);\r\n  }\r\n\r\n}\r\n","<div class=\"nav-bar-container\">\r\n    <span class=\"nav-bar-text\">\r\n        <img src=\"../../assets/analytics-24px.png\" class=\"large-icon\">\r\n        Analytics\r\n    </span>\r\n    <span class=\"nav-bar-text\">\r\n        <img src=\"../../assets/instagram.png\" class=\"large-icon\">&nbsp;\r\n        Instagram\r\n    </span>\r\n    <span class=\"nav-bar-text\">\r\n        <img src=\"../../assets/spotify.png\" class=\"large-icon\">&nbsp;\r\n        Playlist\r\n    </span>\r\n    <span class=\"nav-bar-text\" (click)=\"openRulesDialog()\">\r\n        <img src=\"../../assets/article-24px.png\" class=\"large-icon\">\r\n        Rules\r\n    </span>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyDojexVGPB_jlfCWtVZKmGq-m6ymUoDk2I\",\r\n    authDomain: \"texas-tournament.firebaseapp.com\",\r\n    databaseURL: \"https://texas-tournament-default-rtdb.firebaseio.com\",\r\n    projectId: \"texas-tournament\",\r\n    storageBucket: \"texas-tournament.appspot.com\",\r\n    messagingSenderId: \"1095264044611\",\r\n    appId: \"1:1095264044611:web:5f46047d4ad9168a8eb6f6\",\r\n    measurementId: \"G-ZZ731HVF15\",\r\n    storage: \"gs://texas-tournament.appspot.com\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FINAL_ROUND } from 'src/app/models/constants';\r\nimport { TournamentEvent } from 'src/app/models/tournament-event';\r\n\r\n@Component({\r\n  selector: 'app-event-card-by-round',\r\n  templateUrl: './event-card-by-round.component.html',\r\n  styleUrls: ['./event-card-by-round.component.scss']\r\n})\r\nexport class EventCardByRoundComponent implements OnInit {\r\n  @Input() roundNumber!: number;\r\n  @Input() unfilteredEvents = [];\r\n  @Input() bestPresentationWinners!: string;\r\n  tournamentEvents!: TournamentEvent[];\r\n  finalRound: number = FINAL_ROUND;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.filterEvents();\r\n  }\r\n\r\n  filterEvents(): void {\r\n    this.tournamentEvents = this.unfilteredEvents[1];\r\n  }\r\n\r\n\r\n}\r\n","<mat-expansion-panel \r\n#tournamentRound\r\n(focusout)=\"tournamentRound.close()\"\r\nhideToggle \r\nclass=\"expansion-panel-margin\" \r\nexpanded=false>\r\n    <mat-expansion-panel-header>\r\n        <mat-panel-title class=\"bungee-title\">\r\n            Round {{ roundNumber}}\r\n        </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <div *ngIf=\"roundNumber === finalRound && bestPresentationWinners\">\r\n        <app-best-presentation-award [bestPresentationWinners]=\"bestPresentationWinners\"></app-best-presentation-award>\r\n    </div>\r\n    <div>\r\n        <span class=\"host\">Host : &nbsp;{{ tournamentEvents[0].host }}</span>\r\n    </div>\r\n    <div *ngFor=\"let event of tournamentEvents;\">\r\n        <app-event-result [tournamentEvent]=\"event\"></app-event-result>\r\n    </div>\r\n</mat-expansion-panel>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatExpansionPanel } from '@angular/material/expansion';\r\n\r\n@Component({\r\n  selector: 'app-hosting',\r\n  templateUrl: './hosting.component.html',\r\n  styleUrls: ['./hosting.component.scss']\r\n})\r\nexport class HostingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"bungee-rules-header\">\r\n    Hosting\r\n</div>\r\n<p class=\"font-mono\">\r\n    As a champion you will be in charge of one competition evening. You will select the events that transpire, but your\r\n    decision do not end there.\r\n    The TIOT boasts a rich history of pageantry and splendor, so you must keep the tradition alive and bring your\r\n    bravado to further your chances at victory.\r\n    <br><br>\r\n    After the final round, the Board of Governors shall determine who best represented the TIOT ideals.\r\n    This can be achieved through a clever theme, a delectable hors d'oeuvre, a succulent cocktail, or fun flair that\r\n    outshines the rest. The most creative champion will receive an extra three luxury points for their efforts. HUZZAH!\r\n    <br><br>\r\n    Every competition evening will conclude with the passing of the Torch of Friendship.\r\n    It is at this time that the next host will be announced, and any necessary information about the upcoming events\r\n    will be delivered.\r\n    <br><br>\r\n    *bonus points will be divided evenly in the event of a tie\r\n</p>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tiebreakers',\r\n  templateUrl: './tiebreakers.component.html',\r\n  styleUrls: ['./tiebreakers.component.scss']\r\n})\r\nexport class TiebreakersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bungee-rules-header\">\r\n    Tiebreakers\r\n</div>\r\n    <p class=\"font-mono\">\r\n       Tie scores shall be broken by which Champion has the most first place finishes (keeping in mind that single event rounds are worth double).\r\n       If they are still tied, then whoever has the most second place finishes, followed by most third positions will be used.   If, after four rounds \r\n       this is still not enough to break the tie for first or last positon, then the remaining champions not involved in the deadlock shall host a Tiebreaker\r\n       event (with only the tied contestants competing), to determine the supreme champion (or ultimate loser) \r\n    </p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { TournamentEvent } from '../models/tournament-event';\r\n\r\n@Component({\r\n  selector: 'app-event-admin-parent',\r\n  templateUrl: './event-admin-parent.component.html',\r\n  styleUrls: ['./event-admin-parent.component.scss']\r\n})\r\nexport class EventAdminParentComponent implements OnInit {\r\n\r\n  constructor( private firestore: AngularFirestore ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  testDownload() {\r\n    const data: TournamentEvent = {\r\n      eventName: 'Hearts',\r\n      eventDescription: 'playing some cards',\r\n      host: 'Matt',\r\n      ejc: [],\r\n      round: 1,\r\n      first: 'Shelbie',\r\n      second: 'Tyler',\r\n      third: 'Matt',\r\n      fourth: 'Victoria',\r\n      doubleHeader: true\r\n    }\r\n\r\n    return new Promise<any>((resolve, reject) =>{\r\n      this.firestore\r\n          .collection(\"tournamentEvents\")\r\n          .add(data)\r\n          .then(res => {}, err => reject(err));\r\n    });\r\n  }\r\n\r\n  updloadBlankEntry() {\r\n    const data: TournamentEvent = {\r\n      eventName: '',\r\n      eventDescription: '',\r\n      host: '',\r\n      ejc: [],\r\n      round: 0,\r\n      first: '',\r\n      second: '',\r\n      third: '',\r\n      fourth: '',\r\n      doubleHeader: false\r\n    }\r\n\r\n    return new Promise<any>((resolve, reject) =>{\r\n      this.firestore\r\n          // .collection(\"tournamentEvents\")\r\n          .collection(\"z-test-tournamentEvents\")\r\n          .add(data)\r\n          .then(res => {}, err => reject(err));\r\n    });\r\n  }\r\n\r\n}\r\n","<p>event-admin-parent works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chart-modal',\r\n  templateUrl: './chart-modal.component.html',\r\n  styleUrls: ['./chart-modal.component.scss']\r\n})\r\nexport class ChartModalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-dialog-content class=\"mat-typography\">    \r\n    <mat-tab-group>\r\n        <mat-tab label=\"First\"> Content 1 </mat-tab>\r\n        <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n        <mat-tab label=\"Third\"> Content 3 </mat-tab>\r\n      </mat-tab-group>\r\n</mat-dialog-content>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'tournament-app';\r\n}\r\n","<div class=\"tournament-container\">\r\n    <app-tournament-parent></app-tournament-parent>\r\n</div>\r\n<router-outlet></router-outlet>","export const FINAL_ROUND: number = 4;","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { MatAccordion, MatExpansionPanel } from '@angular/material/expansion';\r\nimport { FINAL_ROUND } from 'src/app/models/constants';\r\nimport { Contestant } from 'src/app/models/contestant';\r\nimport { TournamentEvent } from 'src/app/models/tournament-event';\r\n\r\n@Component({\r\n  selector: 'app-tournament-parent',\r\n  templateUrl: './tournament-parent.component.html',\r\n  styleUrls: ['./tournament-parent.component.scss']\r\n})\r\nexport class TournamentParentComponent implements OnInit {\r\n  roundMap = new Map;\r\n  contestantMap = new Map;\r\n  tieBreakerMap = new Map;\r\n  eventsByRoundMap = new Map;\r\n  eventIterator!: any;\r\n  events: TournamentEvent[] = [];\r\n  placeOrder: Contestant[] = [];\r\n  bestPresentationWinners: string = '';\r\n  loading!: boolean;\r\n  isFinalRound: boolean = false;\r\n  finalRound = FINAL_ROUND;\r\n  eventsCompletedInFinalRound: number = 0;\r\n\r\n\r\n  constructor(private firestore: AngularFirestore) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTournamentEvents();\r\n  }\r\n\r\n  initializeContestants(): void {\r\n    const tyler: Contestant = { name: 'Tyler', avatar: 'tyler-image', points: 0, ejc: true, isTied: false };\r\n    const shelbie: Contestant = { name: 'Shelbie', avatar: 'shelbie-image', points: 0, ejc: true, isTied: false };\r\n    const victoria: Contestant = { name: 'Victoria', avatar: 'vic-image', points: 0, ejc: true, isTied: false };\r\n    const matt: Contestant = { name: 'Matt', avatar: 'matt-image', points: 0, ejc: true, isTied: false };\r\n\r\n    this.contestantMap.set('Tyler', tyler);\r\n    this.contestantMap.set('Shelbie', shelbie);\r\n    this.contestantMap.set('Victoria', victoria);\r\n    this.contestantMap.set('Matt', matt);\r\n  }\r\n\r\n  resetValues(): void {\r\n    this.contestantMap = new Map;\r\n    this.initializeContestants();\r\n    this.roundMap = new Map;\r\n    this.tieBreakerMap = new Map;\r\n    this.eventsByRoundMap = new Map;\r\n    this.eventIterator = undefined;\r\n    this.events = [];\r\n    this.placeOrder = [];\r\n    this.bestPresentationWinners = '';\r\n    this.eventsCompletedInFinalRound = 0;\r\n  }\r\n\r\n  getTournamentEvents(): void {\r\n    this.loading = true;\r\n    this.firestore.collection(\"tournamentEvents\").valueChanges().subscribe(res => {\r\n      // this.firestore.collection(\"z-test-tournamentEvents\").valueChanges().subscribe(res => {\r\n      this.resetValues();\r\n      this.events = <TournamentEvent[]>res;\r\n      this.calculateScores();\r\n      this.setPlaceOrder();\r\n      this.setSortedEvents();\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  calculateScores(): void {\r\n    this.events.forEach(tournamentEvent => {\r\n      this.sortEventByRound(tournamentEvent);\r\n      if (this.isCompletedEvent(tournamentEvent)) {\r\n        this.calculateEventPoints(tournamentEvent);\r\n        this.setTiebreakerValues(tournamentEvent);\r\n        if (tournamentEvent.ejc) {\r\n          tournamentEvent.ejc.forEach(use => {\r\n            this.calculateEJC(use, tournamentEvent);\r\n          });\r\n        }\r\n      } else if (tournamentEvent.bestPresentation && tournamentEvent.bestPresentation.length > 0) {\r\n        this.calculateBestPresentation(tournamentEvent);\r\n      } else if (tournamentEvent.isOvertime) {\r\n        this.calculateOvertimeEventPoints(tournamentEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  sortEventByRound(tournamentEvent: TournamentEvent): void {\r\n    this.setIfFinalRoundComplete(tournamentEvent);\r\n    if (tournamentEvent.round !== 0 && this.eventsByRoundMap.get(tournamentEvent.round)) {\r\n      this.eventsByRoundMap.get(tournamentEvent.round).push(tournamentEvent);\r\n    } else if (tournamentEvent.round !== 0) {\r\n      this.eventsByRoundMap.set(tournamentEvent.round, [tournamentEvent]);\r\n    }\r\n  }\r\n\r\n  setIfFinalRoundComplete(tournamentEvent: TournamentEvent): void {\r\n    if(this.isCompletedEvent(tournamentEvent) && tournamentEvent.round === this.finalRound) {\r\n      this.eventsCompletedInFinalRound++;\r\n      if(!tournamentEvent.doubleHeader || this.eventsCompletedInFinalRound >= 2) {\r\n        this.isFinalRound = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  isCompletedEvent(tournamentEvent: TournamentEvent): boolean {\r\n    return tournamentEvent.third ? true : false;\r\n  }\r\n\r\n  calculateEJC(use: string, tournamentEvent: TournamentEvent): void {\r\n    let contestantToUpdate: Contestant = this.contestantMap.get(use);\r\n    contestantToUpdate.ejc = false;\r\n    this.applyEJCPoints(use, tournamentEvent, contestantToUpdate)\r\n  }\r\n\r\n  applyEJCPoints(use: string, tournamentEvent: TournamentEvent, contestant: Contestant): void {\r\n    if (use === tournamentEvent.first) {\r\n      tournamentEvent.firstPoints! += 3;\r\n      contestant.points! += 3;\r\n    } else if (use === tournamentEvent.second) {\r\n      tournamentEvent.secondPoints! -= 2;\r\n      contestant.points! -= 2;\r\n    } else if (use === tournamentEvent.third) {\r\n      tournamentEvent.thirdPoints! += 1;\r\n      contestant.points! += 1;\r\n    }\r\n  }\r\n\r\n  setTiebreakerValues(tournamentEvent: TournamentEvent): void {\r\n    this.setIndividualTiebreakerValue(tournamentEvent.first, 'first', tournamentEvent.doubleHeader);\r\n    this.setIndividualTiebreakerValue(tournamentEvent.second, 'second', tournamentEvent.doubleHeader);\r\n    this.setIndividualTiebreakerValue(tournamentEvent.third, 'third', tournamentEvent.doubleHeader);\r\n    this.setIndividualTiebreakerValue(tournamentEvent.fourth, 'fourth', tournamentEvent.doubleHeader);\r\n  }\r\n\r\n  setIndividualTiebreakerValue(contestantName: string, place: string, isDoubleHeader: boolean): void {\r\n    let finishes = 0;\r\n    const weightedFinish = isDoubleHeader ? 1 : 2;\r\n    if (this.tieBreakerMap.get(`${contestantName} - ${place}`)) {\r\n      finishes += this.tieBreakerMap.get(`${contestantName} - ${place}`) + weightedFinish;\r\n    } else {\r\n      finishes = weightedFinish;\r\n    }\r\n\r\n    this.tieBreakerMap.set(`${contestantName} - ${place}`, finishes);\r\n  }\r\n\r\n  calculateEventPoints(tournamentEvent: TournamentEvent): void {\r\n    const firstPoints = tournamentEvent.doubleHeader ? 4 : 8;\r\n    const secondPoints = tournamentEvent.doubleHeader ? 3 : 6;\r\n    const thirdPoints = tournamentEvent.doubleHeader ? 2 : 4;\r\n    const fourthPoints = tournamentEvent.doubleHeader ? 1 : 2;\r\n\r\n    const firstPlace = this.contestantMap.get(tournamentEvent.first);\r\n    if (tournamentEvent.host !== firstPlace.name) {\r\n      firstPlace.points! += firstPoints;\r\n      tournamentEvent.firstPoints = firstPoints;\r\n    } else {\r\n      firstPlace.points! += secondPoints;\r\n      tournamentEvent.firstPoints = secondPoints;\r\n    }\r\n\r\n    const secondPlace = this.contestantMap.get(tournamentEvent.second);\r\n    secondPlace.points! += secondPoints;\r\n    tournamentEvent.secondPoints = secondPoints;\r\n\r\n    const thirdPlace = this.contestantMap.get(tournamentEvent.third);\r\n    thirdPlace.points! += thirdPoints;\r\n    tournamentEvent.thirdPoints = thirdPoints;\r\n\r\n    const fourthPlace = this.contestantMap.get(tournamentEvent.fourth);\r\n    fourthPlace.points! += fourthPoints;\r\n    tournamentEvent.fourthPoints = fourthPoints;\r\n  }\r\n\r\n  calculateOvertimeEventPoints(tournamentEvent: TournamentEvent): void {\r\n    if(tournamentEvent.first) {\r\n      const firstPlace = this.contestantMap.get(tournamentEvent.first);\r\n      firstPlace.points! += 1;\r\n      tournamentEvent.firstPoints = 1;\r\n    }\r\n  }\r\n\r\n  setPlaceOrder(): void {\r\n    const contestants = Array.from(this.contestantMap.values());\r\n    this.placeOrder = this.setTieBreakerOrder(contestants);\r\n  }\r\n\r\n  setTieBreakerOrder(contestantNames: Contestant[]): Contestant[] {\r\n    const result = contestantNames.sort((x: Contestant, y: Contestant): number => {\r\n      if (x.points !== y.points) {\r\n        return y.points - x.points;\r\n      }\r\n      if (this.getFinishesForContestant(x.name, 'first') !== this.getFinishesForContestant(y.name, 'first')) {\r\n        return this.compareNumberOfFinishes(this.getFinishesForContestant(x.name, 'first'), this.getFinishesForContestant(y.name, 'first'));\r\n      }\r\n      else if (this.getFinishesForContestant(x.name, 'second') !== this.getFinishesForContestant(y.name, 'second')) {\r\n        return this.compareNumberOfFinishes(this.getFinishesForContestant(x.name, 'second'), this.getFinishesForContestant(y.name, 'second'));\r\n      }\r\n      else if (this.getFinishesForContestant(x.name, 'third') !== this.getFinishesForContestant(y.name, 'third')) {\r\n        return this.compareNumberOfFinishes(this.getFinishesForContestant(x.name, 'third'), this.getFinishesForContestant(y.name, 'third'));\r\n      }\r\n      x.isTied = true;\r\n      y.isTied = true;\r\n      return 0;\r\n    });\r\n\r\n    return result\r\n  }\r\n\r\n  getFinishesForContestant(contestantName: string, place: string): number {\r\n    return this.tieBreakerMap.get(`${contestantName} - ${place}`) ? this.tieBreakerMap.get(`${contestantName} - ${place}`) : 0;\r\n  }\r\n\r\n  compareNumberOfFinishes(x: number, y: number): number {\r\n    if (x > y) {\r\n      return -1;\r\n    }\r\n    if (x < y) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  setSortedEvents(): void {\r\n    this.eventIterator = Array.from(this.eventsByRoundMap.entries()).sort(function (a, b) { return b[0] - a[0] });\r\n  }\r\n\r\n  calculateBestPresentation(tournamentEvent: TournamentEvent): void {\r\n    const numberOfWinners = tournamentEvent.bestPresentation?.length;\r\n    let pointsToAward: number;\r\n\r\n    if (numberOfWinners === 1) {\r\n      pointsToAward = 3;\r\n    } else if (numberOfWinners === 2) {\r\n      pointsToAward = 1.5;\r\n    } else {\r\n      pointsToAward = 1;\r\n    }\r\n\r\n    let winnerCounter: number = 0;\r\n    tournamentEvent.bestPresentation?.forEach(winner => {\r\n      this.contestantMap.get(winner).points += pointsToAward;\r\n      this.contestantMap.get(winner).isBestPresentation = true;\r\n      let seperator: string = winnerCounter === 0 ? '' : ' , ';\r\n      this.bestPresentationWinners += `${seperator}${winner}`\r\n      winnerCounter++;\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"loading\" class=\"centered\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div *ngIf=\"!loading\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div>\r\n                <app-logo-scoreboard \r\n                [isFinalRound]=\"isFinalRound\"\r\n                [placeOrder]=\"placeOrder\"></app-logo-scoreboard>\r\n            </div>\r\n            <div>\r\n                <app-nav-bar\r\n                ></app-nav-bar>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <mat-accordion multi=\"false\">\r\n                    <div *ngFor=\"let events of eventIterator\">\r\n                        <app-event-card-by-round\r\n                        [roundNumber]=\"events[0]\"\r\n                        [bestPresentationWinners]=\"bestPresentationWinners\"\r\n                        [unfilteredEvents]=\"events\"></app-event-card-by-round>\r\n                    </div>\r\n                </mat-accordion>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ScoringComponent } from './rules/scoring/scoring.component';\r\nimport { HostingComponent } from './rules/hosting/hosting.component';\r\nimport { WildcardComponent } from './rules/wildcard/wildcard.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { LogoScoreboardComponent } from './logo-scoreboard/logo-scoreboard.component';\r\nimport { ScoreCardComponent } from './logo-scoreboard/score-card/score-card.component';\r\nimport { TournamentParentComponent } from './tournament-parent/tournament-parent/tournament-parent.component';\r\n\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AngularFireModule } from \"@angular/fire\";\r\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\nimport { EventAdminParentComponent } from './event-admin-parent/event-admin-parent.component';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { EventCardByRoundComponent } from './tournament-parent/event-card-by-round/event-card-by-round.component';\r\nimport { EventResultComponent } from './tournament-parent/event-card-by-round/event-result/event-result.component';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport { TiebreakersComponent } from './rules/tiebreakers/tiebreakers.component';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { BestPresentationAwardComponent } from './tournament-parent/event-card-by-round/best-presentation-award/best-presentation-award.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { RulesModalComponent } from './nav-bar/rules-modal/rules-modal.component';\r\nimport { ChartModalComponent } from './nav-bar/chart-modal/chart-modal.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ScoringComponent,\r\n    HostingComponent,\r\n    WildcardComponent,\r\n    LogoScoreboardComponent,\r\n    ScoreCardComponent,\r\n    TournamentParentComponent,\r\n    EventAdminParentComponent,\r\n    EventCardByRoundComponent,\r\n    EventResultComponent,\r\n    TiebreakersComponent,\r\n    BestPresentationAwardComponent,\r\n    NavBarComponent,\r\n    RulesModalComponent,\r\n    ChartModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFirestoreModule,\r\n    MatIconModule,\r\n    HttpClientModule,\r\n    AngularFireStorageModule,\r\n    MatDialogModule,\r\n    MatTabsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { TournamentEvent } from 'src/app/models/tournament-event';\r\n\r\n@Component({\r\n  selector: 'app-event-result',\r\n  templateUrl: './event-result.component.html',\r\n  styleUrls: ['./event-result.component.scss']\r\n})\r\nexport class EventResultComponent implements OnInit {\r\n  @Input() tournamentEvent!: TournamentEvent;\r\n  displayedColumns: string[] = ['icon', 'position', 'name', 'points', 'ejc'];\r\n  dataSource: any = [];  \r\n  eventBannerUrl!: string;\r\n  titleOverlayUrl!: string;\r\n\r\n  constructor(private afStorage: AngularFireStorage) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tournamentEvent.isOvertime) {\r\n      this.populateOvertimeColumns();\r\n    } else {\r\n      this.populateColumns();\r\n    }\r\n    this.showImage(this.tournamentEvent.eventName!);\r\n    this.getTitleOverlay();\r\n  }\r\n\r\n  populateColumns(): void {\r\n    this.dataSource.push({\r\n      position: '1st', name: this.tournamentEvent.first,\r\n      points: this.tournamentEvent.firstPoints, ejc: this.getEjc(this.tournamentEvent.first)\r\n    });\r\n    this.dataSource.push({\r\n      position: '2nd', name: this.tournamentEvent.second,\r\n      points: this.tournamentEvent.secondPoints, ejc: this.getEjc(this.tournamentEvent.second)\r\n    });\r\n    this.dataSource.push({\r\n      position: '3rd', name: this.tournamentEvent.third,\r\n      points: this.tournamentEvent.thirdPoints, ejc: this.getEjc(this.tournamentEvent.third)\r\n    });\r\n    this.dataSource.push({\r\n      position: '4th', name: this.tournamentEvent.fourth,\r\n      points: this.tournamentEvent.fourthPoints, ejc: this.getEjc(this.tournamentEvent.fourth)\r\n    });\r\n  }\r\n\r\n  populateOvertimeColumns(): void {\r\n    this.dataSource.push({\r\n      position: '1st', name: this.tournamentEvent.first,\r\n      points: this.tournamentEvent.firstPoints, ejc: this.getEjc(this.tournamentEvent.first)\r\n    });\r\n    this.dataSource.push({\r\n      position: '2nd', name: this.tournamentEvent.second,\r\n      points: this.tournamentEvent.secondPoints, ejc: this.getEjc(this.tournamentEvent.second)\r\n    });\r\n  }\r\n\r\n  getPoints(points: number): string {\r\n    const pointsString = points && points !== 1 ? 'pts' : 'pt';\r\n    return points ? `${points}${pointsString}` : '';\r\n  }\r\n\r\n  getEjc(name: string): string {\r\n    return this.tournamentEvent.ejc.includes(name) ? 'Juiced!' : '';\r\n  }\r\n\r\n  getIcon(positionForIcon: string, element: any): boolean {\r\n    return positionForIcon === element.position ? true : false;\r\n  }\r\n\r\n  showImage(eventName: string): void {\r\n    let storageRef = this.afStorage.storage.ref();\r\n    storageRef.child(`${eventName}.jpg`).getDownloadURL().then((url) => {\r\n      this.eventBannerUrl = url;\r\n    }).catch( (error) => {\r\n      this.showImage('default');\r\n    });\r\n  }\r\n\r\n  getTitleOverlay(): void {\r\n    const url = '../../../../assets/';\r\n    this.titleOverlayUrl = this.tournamentEvent.eventDescription ? `${url}event-title-with-subtitle.png` : `${url}event-title.png`;\r\n  }\r\n\r\n  isCompletedEvent(): boolean {\r\n    return this.tournamentEvent.first ? true : false;\r\n  }\r\n\r\n}\r\n","<div class=\"eventContainer\" [ngStyle]=\"{'background-image': 'url(' + eventBannerUrl + ')'}\">\r\n  <div class=\"eventContainerOverlay\" [ngStyle]=\"{'background-image': 'url(' + titleOverlayUrl + ')'}\">\r\n    <div class=\"event-title\">{{ tournamentEvent.eventName }}</div>\r\n    <div class=\"event-description\">{{ tournamentEvent.eventDescription }}</div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf='!isCompletedEvent()' class=\"table-spacer\"></div>\r\n\r\n<div *ngIf='isCompletedEvent()'>\r\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 event-score-table\">\r\n\r\n    <ng-container matColumnDef=\"icon\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <span *ngIf=\"getIcon('1st', element)\">\r\n          <img src=\"../../../../assets/trophy1use.svg\" class=\"event-table-icon\">\r\n        </span>\r\n        <span *ngIf=\"getIcon('2nd', element)\">\r\n          <img src=\"../../../../assets/silver-medal -use.svg\" class=\"event-table-icon\">\r\n        </span>\r\n        <span *ngIf=\"getIcon('3rd', element)\">\r\n          <img src=\"../../../../assets/bronze-medal - use.svg\" class=\"event-table-icon\">\r\n        </span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"position\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"points\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{getPoints(element.points)}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"ejc\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.ejc}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-best-presentation-award',\r\n  templateUrl: './best-presentation-award.component.html',\r\n  styleUrls: ['./best-presentation-award.component.scss']\r\n})\r\nexport class BestPresentationAwardComponent implements OnInit {\r\n  @Input() bestPresentationWinners!: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card class=\"award-container\">\r\n        <div class=\"container\">\r\n            <div class=\"row text-small\">\r\n                <div class=\"col-8\">Best Overall Presentation <img src=\"../../../assets/ribbon.png\" class=\"event-table-icon\">:\r\n                </div>\r\n                <div class=\"col-4\">\r\n                    {{ bestPresentationWinners }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-scoring',\r\n  templateUrl: './scoring.component.html',\r\n  styleUrls: ['./scoring.component.scss']\r\n})\r\nexport class ScoringComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bungee-rules-header\">\r\n    Scoring\r\n</div>\r\n    <span class=\"font-mono\">\r\n        Excelsior Brave Champions, welcome to the Texas Invitational Open Tournament! Your requested presence is a victory in itself, as only the most elite are asked to participate. However, to win the true prize, you must showcase your abilities and dedication. \r\n        <br><br>\r\n        The tournament will take place over four enchanting evenings, with one host leading their fellow champions through a maximum of two events of their choosing. \r\n        <br><br>\r\n        Do you have what it takes to succeed? \r\n    </span>\r\n    <div class=\"font-mono\">\r\n        <br>\r\n        <b>Single Event Scoring</b>\r\n    </div>\r\n    <div class=\"font-mono\">1st: 8pts</div>\r\n    <div class=\"font-mono\">2nd: 6pts</div>\r\n    <div class=\"font-mono\">3rd: 4pts</div>\r\n    <div class=\"font-mono\">4th: 2pts</div>\r\n\r\n    <div class=\"font-mono\">\r\n        <br>\r\n        <b>Double Event Scoring (Per Event)</b>\r\n    </div>\r\n    <div class=\"font-mono\">1st: 4pts</div>\r\n    <div class=\"font-mono\">2nd: 3pts</div>\r\n    <div class=\"font-mono\">3rd: 2pts</div>\r\n    <div class=\"font-mono\">4th: 1pts</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rules-modal',\r\n  templateUrl: './rules-modal.component.html',\r\n  styleUrls: ['./rules-modal.component.scss']\r\n})\r\nexport class RulesModalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-dialog-content class=\"mat-typography\">    \r\n    <div class=\"rules-block\">\r\n        <app-scoring></app-scoring>\r\n    </div>\r\n    <div class=\"rules-block\">\r\n        <app-hosting></app-hosting>\r\n    </div>\r\n    <div class=\"rules-block\">\r\n        <app-wildcard></app-wildcard>\r\n    </div>\r\n    <div class=\"rules-block\">\r\n        <app-tiebreakers></app-tiebreakers>\r\n    </div>\r\n</mat-dialog-content>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-wildcard',\r\n  templateUrl: './wildcard.component.html',\r\n  styleUrls: ['./wildcard.component.scss']\r\n})\r\nexport class WildcardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"bungee-rules-header\">\r\n    Extra Juice\r\n</div>\r\n        <span class=\"font-mono\">\r\n           Did someone say they need more juice!?!?  One of the hallmarks of THE TEXAS INVIATIONAL OPEN TOURNEMENT TM \r\n           is the infamous EXTRA JUICE CARD!  Over the course of the four nights, a Champion may proclaim that they \"Need The Juice!\" for\r\n           a chance to earn extra moist bonus points.  This may only be done once, before an event, and only if the Champion is NOT THE HOST. Bonus points are awarded\r\n           as described below, but beware!  If you ask for the juice and dont deliver you may be penalized!\r\n        </span>\r\n        <div class=\"font-mono\">\r\n            <br>\r\n            <b>EJP (Extra Juice Points)</b>\r\n        </div>\r\n        <div class=\"font-mono\">1st: &nbsp; 3pts</div>\r\n        <div class=\"font-mono-red\"><b>2nd: -2pts</b></div>\r\n        <div class=\"font-mono\">3rd: &nbsp; 1pt</div>\r\n        <div class=\"font-mono\">4th: &nbsp; 0pts</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Contestant } from '../models/contestant';\r\n\r\n@Component({\r\n  selector: 'app-logo-scoreboard',\r\n  templateUrl: './logo-scoreboard.component.html',\r\n  styleUrls: ['./logo-scoreboard.component.scss']\r\n})\r\nexport class LogoScoreboardComponent implements OnInit {\r\n  @Input() placeOrder: Contestant[] = [];\r\n  @Input() currentRound: number = 0;\r\n  @Input() isFinalRound: boolean = false;\r\n  placeCount: number = 0;\r\n  numberOfContestantsTied: number = 0;\r\n  contestantPositionMap = new Map;\r\n  previousTiedPointsValue!: number;\r\n  isAllContestantsTied: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.placeOrder.forEach(contestant => {\r\n      this.contestantPositionMap.set(contestant, this.getPlace(contestant)); \r\n    });\r\n    \r\n   if(this.placeCount === 0) {\r\n     this.isAllContestantsTied = true;\r\n   }\r\n  }\r\n  \r\n  getPlace(contestant: Contestant): string {\r\n    if(contestant.isTied && contestant.points !== this.previousTiedPointsValue) {\r\n      this.placeCount += this.numberOfContestantsTied;\r\n      this.numberOfContestantsTied = 0;\r\n      this.previousTiedPointsValue = contestant.points;\r\n      this.numberOfContestantsTied += 1;\r\n      return this.getPlaceFromNumber(this.placeCount);\r\n    }\r\n    \r\n    if(contestant.isTied && contestant.points === this.previousTiedPointsValue) {\r\n      this.numberOfContestantsTied += 1;\r\n      return this.getPlaceFromNumber(this.placeCount);\r\n    }\r\n  \r\n   this.placeCount += this.numberOfContestantsTied;\r\n   this.numberOfContestantsTied = 0;\r\n   const place = this.getPlaceFromNumber(this.placeCount);\r\n   this.placeCount++;\r\n   return place;\r\n  }\r\n\r\n  getPlaceFromNumber(place: number): string {\r\n    switch(place) {\r\n      case 0: \r\n        return '1st';\r\n      case 1: \r\n        return '2nd';\r\n      case 2: \r\n        return '3rd';\r\n      case 3: \r\n        return '4th';\r\n      default: \r\n        return '';\r\n    }\r\n  }\r\n\r\n}\r\n","<div [ngClass]=\"isFinalRound ? 'logo-container-final-results' : 'logo-container'\">\r\n    <div class=\"row\">\r\n        <div class=\"col-6\" col align-self-center>\r\n            <br><br><br><br><br><br><br>\r\n            <app-score-card \r\n                [isFinalRound]=\"isFinalRound\"\r\n                [place]=\"contestantPositionMap.get(placeOrder[0])\"\r\n                [isAllContestantsTied]=\"isAllContestantsTied\"\r\n                [contestant]=\"placeOrder[0]\">\r\n            </app-score-card>\r\n        </div>\r\n\r\n        <div class=\"col-6\" col align-self-center>\r\n            <br><br><br><br><br><br><br>\r\n            <app-score-card \r\n                [isFinalRound]=\"isFinalRound\"\r\n                [place]=\"contestantPositionMap.get(placeOrder[1])\"\r\n                [isAllContestantsTied]=\"isAllContestantsTied\"\r\n                [contestant]=\"placeOrder[1]\">\r\n            </app-score-card>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\" col align-self-center>\r\n            <br><br><br><br>\r\n            <app-score-card \r\n                [isFinalRound]=\"isFinalRound\"\r\n                [place]=\"contestantPositionMap.get(placeOrder[2])\"\r\n                [isAllContestantsTied]=\"isAllContestantsTied\"\r\n                [contestant]=\"placeOrder[2]\">\r\n            </app-score-card>\r\n        </div>\r\n\r\n        <div class=\"col-6\" col align-self-center>\r\n            <br><br><br><br>\r\n            <app-score-card \r\n                [isFinalRound]=\"isFinalRound\"\r\n                [place]=\"contestantPositionMap.get(placeOrder[3])\"\r\n                [isAllContestantsTied]=\"isAllContestantsTied\"\r\n                [contestant]=\"placeOrder[3]\">\r\n            </app-score-card>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export class Contestant {\r\n     name!: string;\r\n     avatar?: string;\r\n     points!: number;\r\n     ejc?: boolean;\r\n     isTied: boolean = false;\r\n     isBestPresentation?: boolean;\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}